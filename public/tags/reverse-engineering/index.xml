<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reverse engineering on </title>
    <link>https://pc-b.github.io/tags/reverse-engineering/</link>
    <description>Recent content in reverse engineering on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jan 2023 17:36:35 -0500</lastBuildDate><atom:link href="https://pc-b.github.io/tags/reverse-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Controlling Return Addresses with Buffer Overflows</title>
      <link>https://pc-b.github.io/posts/buffer-overflows-1/</link>
      <pubDate>Tue, 10 Jan 2023 17:36:35 -0500</pubDate>
      
      <guid>https://pc-b.github.io/posts/buffer-overflows-1/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;When I was younger, I was always fascinated with the idea of being able to break things digitally. However, I always believed that I was not smart enough to pursue this. In 2022, I have decided to start learning reverse engineering again! Starting out, I have started the Modern Binary Exploitation crackme files, and have been doing the picoCTF training ones as well. In this article I will cover picoCTF buffer-overflow1!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
